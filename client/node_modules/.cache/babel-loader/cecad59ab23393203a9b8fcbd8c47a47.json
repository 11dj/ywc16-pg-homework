{"ast":null,"code":"import axios from 'axios';\nexport var mainSearch = function mainSearch(origin, keyword) {\n  return function (dispatch) {\n    console.log('Hello mainSearch', keyword);\n    axios.post('/api/skyscanner/getSky', {\n      origin: origin,\n      keyword: keyword\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      dispatch({\n        type: 'GET_CHEAP',\n        payload: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getSky = function getSky(origin, destination) {\n  console.log('SKYYYY', destination);\n  console.log('fllll', destination);\n  axios.post('/api/skyscanner/getCheap', {\n    origin: origin,\n    destination: destination\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    console.log(response.data);\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport var getBudget = function getBudget(origin, budget) {\n  return function (dispatch) {\n    console.log(origin, budget);\n    axios.post('/api/skyscanner/getBudget', {\n      origin: origin,\n      budget: budget\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response.data); // return response.data\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getCurrentCity = function getCurrentCity(l) {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP').then(function (response) {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.ip_address,\n          city: response.data.city,\n          country: response.data.country,\n          lat: response.data.latitude,\n          lng: response.data.longitude\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kittis/project/ywc/tiewnaidy/client/src/actions/main.js"],"names":["axios","mainSearch","origin","keyword","dispatch","console","log","post","headers","then","response","type","payload","data","catch","error","getSky","destination","getBudget","budget","getCurrentCity","l","get","ip","ip_address","city","country","lat","latitude","lng","longitude"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n\nexport const mainSearch = (origin, keyword) => {\n  return function (dispatch) {\n    console.log('Hello mainSearch', keyword)\n    axios.post('/api/skyscanner/getSky',\n    { origin, keyword },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      dispatch({\n        type: 'GET_CHEAP',\n        payload: response.data\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport const getSky = (origin, destination) => {\n  console.log('SKYYYY', destination)\n    console.log('fllll', destination)\n    axios.post('/api/skyscanner/getCheap',\n    { origin, destination },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      console.log(response.data)\n\n      return response.data\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getBudget = (origin, budget) => {\n  return function (dispatch) {\n    console.log(origin, budget)\n    axios.post('/api/skyscanner/getBudget',\n    { origin, budget },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      console.log(response.data)\n\n      // return response.data\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport const getCurrentCity = (l) => {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP')\n    .then((response) => {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.ip_address,\n          city: response.data.city,\n          country: response.data.country,\n          lat: response.data.latitude,\n          lng: response.data.longitude\n        }\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}