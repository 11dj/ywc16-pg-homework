{"ast":null,"code":"import axios from 'axios';\nexport var mainSearch = function mainSearch(origin, keyword) {\n  return function (dispatch) {\n    console.log('Hello mainSearch', keyword);\n    axios.post('/api/skyscanner/getSky', {\n      keyword: keyword\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      getSky(origin, response.data);\n      console.log(response.data);\n      dispatch({\n        type: 'mainSearch',\n        payload: response.data\n      });\n      dispatch({\n        type: 'LOADING_OFF'\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\n\nvar getSky = function getSky(origin, destination) {\n  return function (dispatch) {\n    console.log('fllll', destination);\n    axios.post('/api/skyscanner/getCheap', {\n      origin: origin,\n      destination: destination\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response.data);\n      dispatch({\n        type: 'GET_CHEAP',\n        payload: response.data\n      });\n      dispatch({\n        type: 'LOADING_OFF'\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\n\nexport var getCurrentCity = function getCurrentCity(l) {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP').then(function (response) {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.ip_address,\n          city: response.data.city,\n          country: response.data.country,\n          lat: response.data.latitude,\n          lng: response.data.longitude\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kittis/project/ywc/tiewnaidy/client/src/actions/main.js"],"names":["axios","mainSearch","origin","keyword","dispatch","console","log","post","headers","then","response","getSky","data","type","payload","catch","error","destination","getCurrentCity","l","get","ip","ip_address","city","country","lat","latitude","lng","longitude"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAASC,OAAT,EAAqB;AAC7C,SAAO,UAAUC,QAAV,EAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,OAAhC;AACAH,IAAAA,KAAK,CAACO,IAAN,CAAW,wBAAX,EACA;AAAEJ,MAAAA,OAAO,EAAPA;AAAF,KADA,EAEA;AAAEK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAFA,EAICC,IAJD,CAIM,UAACC,QAAD,EAAc;AAClBC,MAAAA,MAAM,CAACT,MAAD,EAASQ,QAAQ,CAACE,IAAlB,CAAN;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACE,IAArB;AACAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEJ,QAAQ,CAACE;AAFX,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAdD,EAeCE,KAfD,CAeO,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAjBD;AAkBD,GApBD;AAqBD,CAtBM;;AAwBP,IAAML,MAAM,GAAG,SAATA,MAAS,CAACT,MAAD,EAASe,WAAT,EAAyB;AACtC,SAAO,UAAUb,QAAV,EAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,WAArB;AACAjB,IAAAA,KAAK,CAACO,IAAN,CAAW,0BAAX,EACA;AAAEL,MAAAA,MAAM,EAANA,MAAF;AAAUe,MAAAA,WAAW,EAAXA;AAAV,KADA,EAEA;AAAET,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAFA,EAICC,IAJD,CAIM,UAACC,QAAD,EAAc;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACE,IAArB;AACAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAEJ,QAAQ,CAACE;AAFX,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAbD,EAcCE,KAdD,CAcO,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAhBD;AAiBD,GAnBD;AAoBD,CArBD;;AAuBA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AACnC,SAAO,UAAUf,QAAV,EAAoB;AACzBJ,IAAAA,KAAK,CAACoB,GAAN,CAAU,eAAV,EACCX,IADD,CACM,UAACC,QAAD,EAAc;AAClBN,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,QADC;AAEPC,QAAAA,OAAO,EAAE;AACPO,UAAAA,EAAE,EAAEX,QAAQ,CAACE,IAAT,CAAcU,UADX;AAEPC,UAAAA,IAAI,EAAEb,QAAQ,CAACE,IAAT,CAAcW,IAFb;AAGPC,UAAAA,OAAO,EAAEd,QAAQ,CAACE,IAAT,CAAcY,OAHhB;AAIPC,UAAAA,GAAG,EAAEf,QAAQ,CAACE,IAAT,CAAcc,QAJZ;AAKPC,UAAAA,GAAG,EAAEjB,QAAQ,CAACE,IAAT,CAAcgB;AALZ;AAFF,OAAD,CAAR;AAUD,KAZD,EAaCb,KAbD,CAaO,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAfD;AAgBD,GAjBD;AAkBD,CAnBM","sourcesContent":["import axios from 'axios'\n\n\nexport const mainSearch = (origin, keyword) => {\n  return function (dispatch) {\n    console.log('Hello mainSearch', keyword)\n    axios.post('/api/skyscanner/getSky',\n    { keyword },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      getSky(origin, response.data)\n      console.log(response.data)\n      dispatch({\n        type: 'mainSearch',\n        payload: response.data\n      })\n      dispatch({\n        type: 'LOADING_OFF'\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nconst getSky = (origin, destination) => {\n  return function (dispatch) {\n    console.log('fllll', destination)\n    axios.post('/api/skyscanner/getCheap',\n    { origin, destination },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      console.log(response.data)\n      dispatch({\n        type: 'GET_CHEAP',\n        payload: response.data\n      })\n      dispatch({\n        type: 'LOADING_OFF'\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport const getCurrentCity = (l) => {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP')\n    .then((response) => {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.ip_address,\n          city: response.data.city,\n          country: response.data.country,\n          lat: response.data.latitude,\n          lng: response.data.longitude\n        }\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}