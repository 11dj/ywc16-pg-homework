{"ast":null,"code":"import axios from 'axios';\nexport var getCheap = function getCheap(origin, keyword) {\n  return function (dispatch) {\n    axios.post('/api/skyscanner/getSky', {\n      origin: origin,\n      keyword: keyword\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: 'GET_CHEAP_INFO',\n          payload: response.data\n        });\n      } else {\n        dispatch({\n          type: 'GET_CHEAP_ERROR',\n          payload: response.data\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: 'GET_CHEAP_ERROR',\n        payload: error\n      });\n    });\n  };\n};\nexport var getBudget = function getBudget(origin, budget) {\n  return function (dispatch) {\n    console.log(origin, budget);\n    axios.post('/api/skyscanner/getBudget', {\n      origin: origin,\n      budget: budget\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log('code', response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: 'GET_BUDGET_INFO',\n          payload: response.data\n        });\n      } else {\n        dispatch({\n          type: 'GET_BUDGET_ERROR',\n          payload: response.data\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: 'GET_BUDGET_ERROR',\n        payload: error\n      });\n    });\n  };\n};\nexport var getCurrentCity = function getCurrentCity(l) {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP').then(function (response) {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.address,\n          city: response.data.city.split('(')[0],\n          country: response.data.country\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kittis/project/ywc/tiewnaidy/client/src/actions/main.js"],"names":["axios","getCheap","origin","keyword","dispatch","post","headers","then","response","console","log","status","type","payload","data","catch","error","getBudget","budget","getCurrentCity","l","get","ip","address","city","split","country"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n\nexport const getCheap = (origin, keyword) => {\n  return function (dispatch) {\n    axios.post('/api/skyscanner/getSky',\n    { origin, keyword },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      console.log(response)\n      if (response.status === 200) {\n        dispatch({\n          type: 'GET_CHEAP_INFO',\n          payload: response.data\n        })\n      } else {\n        dispatch({\n          type: 'GET_CHEAP_ERROR',\n          payload: response.data\n        })\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: 'GET_CHEAP_ERROR',\n        payload: error\n      })\n    });\n  }\n}\n\nexport const getBudget = (origin, budget) => {\n  return function (dispatch) {\n    console.log(origin, budget)\n    axios.post('/api/skyscanner/getBudget',\n    { origin, budget },\n    { headers: { 'Content-Type': 'application/json' }\n    })\n    .then((response) => {\n      console.log('code', response)\n      if (response.status === 200) {\n        dispatch({\n          type: 'GET_BUDGET_INFO',\n          payload: response.data\n        })\n      } else {\n        dispatch({\n          type: 'GET_BUDGET_ERROR',\n          payload: response.data\n        })\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: 'GET_BUDGET_ERROR',\n        payload: error\n      })\n    });\n  }\n}\n\nexport const getCurrentCity = (l) => {\n  return function (dispatch) {\n    axios.get('/api/ip/getIP')\n    .then((response) => {\n      dispatch({\n        type: 'GET_IP',\n        payload: {\n          ip: response.data.address,\n          city: response.data.city.split('(')[0],\n          country: response.data.country\n        }\n      })\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}